#cloud-config
package_update: true
packages:
 - mc
 - pv

write_files:
  - path: /tmp/setup/run.sh
    permissions: '0755'
    content: |
      #!/bin/bash

      mkdir -p ${prom_path} /var/lib/prometheus

      useradd --no-create-home --shell /bin/false -c "Prometheus Monitoring User"  prometheus

      cd /root/
      wget https://github.com/prometheus/prometheus/releases/download/v${version}/prometheus-${version}.linux-amd64.tar.gz
      tar zxvf prometheus-${version}.linux-amd64.tar.gz
      cd       prometheus-${version}.linux-amd64

      cp prometheus promtool /usr/local/bin/
      cp -r consoles/          ${prom_path}/consoles/
      cp -r console_libraries/ ${prom_path}/console_libraries/

      chown -R prometheus:prometheus ${prom_path} /var/lib/prometheus
      chown    prometheus:prometheus /usr/local/bin/{prometheus,promtool}

      rm     /root/prometheus-${version}.linux-amd64.tar.gz
      rm -rf /root/prometheus-${version}.linux-amd64

      systemctl daemon-reload
      systemctl enable prometheus --now

  - path: ${prom_path}/web.yml 
    permissions: '0644'
    content: |
      tls_server_config:
        cert_file: ${prom_path}/prometheus.crt
        key_file:  ${prom_path}/prometheus.key

  - path: ${prom_path}/prometheus.yml
    permissions: '0644'
    content: |    
      global:
        scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
        evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.

      scrape_configs:
        - job_name: "prometheus"
          scheme: http
          static_configs:
            - targets:
              - localhost:9090
        - job_name: "pool"
          scheme: https
          tls_config:
            ca_file: ${prom_path}/node_exporter.crt
            insecure_skip_verify: true
          static_configs:
          - targets:
      %{ for member_ip in pool_ips ~}
            - ${member_ip}:9100
      %{ endfor ~}

  - path: /etc/systemd/system/prometheus.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Prometheus
      Wants=network-online.target
      After=network-online.target

      [Service]
      User=prometheus
      Group=prometheus
      Type=simple
      # '-' means that if the file does not exist, it will not be read and no error or warning message is logged
      EnvironmentFile=-/etc/sysconfig/prometheus     
      ExecStart=/usr/local/bin/prometheus           \
      --config.file ${prom_path}/prometheus.yml     \
      --storage.tsdb.path /var/lib/prometheus/      \
      --storage.tsdb.retention=30d                  \
      --log.level=debug                             \
      --web.config.file=${prom_path}/web.yml                     \
      --web.console.templates=${prom_path}/consoles \
      --web.console.libraries=${prom_path}/console_libraries
      ExecReload=/bin/kill -HUP $MAINPID
      Restart=on-failure

      [Install]
      WantedBy=multi-user.target

  - path: ${prom_path}/prometheus.key
    permissions: '0600'
    content: |
      ${infra_key}

  - path: ${prom_path}/prometheus.crt
    permissions: '0600'
    content: |
      ${prom_cert}

  - path: ${prom_path}/node_exporter.crt
    permissions: '0600'
    content: |
      ${node_x_cert}

    # Enable SSH only from inside and master IP, the rest is allowed
  - path: /tmp/setup/firewall.sh 
    permissions: '0755'
    content: |
      #!/bin/bash
      # The order of commands is correct.
      
      iptables -I INPUT -p tcp                   --dport 22 -j DROP
      iptables -I INPUT -p icmp                             -j DROP

      iptables -I INPUT -p tcp  -s 10.0.0.0/8    --dport 22 -j ACCEPT

      iptables -I INPUT -p icmp -s ${master_ip}             -j ACCEPT
      iptables -I INPUT -p icmp -s ${proctor_ip}            -j ACCEPT      
      iptables -I INPUT -p icmp -s 10.0.0.0/8               -j ACCEPT

      iptables -I INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
      iptables -I INPUT -i lo -j ACCEPT

      exit 0

runcmd:
  - /tmp/setup/run.sh
  - /tmp/setup/firewall.sh